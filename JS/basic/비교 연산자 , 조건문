a = 3은 할당하는 것이고 ==은 같은지 물어보는 것 ex) true , false

==은 동등 연산자라고 함

근데 동등 연산자가 이상하게 동작할 때가 있음

const a = 1;

const b = “1”;

console.log(a == b );

이 값은 true가 나옴 왜 숫자형과 문자형인데 true가 나올까

JavaScript에서 `==` (동등 연산자)는 **느슨한 비교**(loose equality) 연산자라고 불립니다. 이 연산자는 비교를 할 때 **형 변환**(type coercion)을 수행하여 두 값의 타입이 다르더라도 가능한 경우 값을 같게 만들어 비교합니다.

### 예시 분석:

```jsx
const a = 1;
const b = "1";

console.log(a == b); // true

```

1. 변수 `a`는 숫자형 `1`입니다.
2. 변수 `b`는 문자열 `"1"`입니다.

`==` 연산자는 먼저 **형 변환**을 시도합니다:

- `a`는 숫자형, `b`는 문자형이기 때문에, 자바스크립트는 `b`를 숫자형으로 자동 변환합니다. 즉, `"1"`이 숫자 `1`로 변환됩니다.
- 이제 숫자 `1`과 숫자 `1`을 비교하게 되어 `true`가 반환됩니다.

### 결론:

- `==` 연산자는 비교 전에 타입을 일치시키기 위해 형 변환을 시도하며, 이 경우 `"1"`을 숫자 `1`로 변환하기 때문에 두 값이 같다고 판단하여 `true`를 반환합니다.

### 참고: `===` (엄격한 비교)

만약 형 변환 없이 **타입까지 같아야** 한다면 `===` (엄격한 비교, strict equality) 연산자를 사용해야 합니다:

```jsx
console.log(a === b); // false

```

이 경우 `a`는 숫자, `b`는 문자열이므로 **타입이 다르다**고 판단하여 `false`가 반환됩니다.

조건문

if(age > 19){

console.log(”환영합니다.”);

}

if(age ≤ 19){

console.log(”안녕히 가세요.”);

}

이렇게 작성하면 두 조건문 중 하나는 무조건 작동을 함

근데 더 간단하게 작성하는 방법은 else를 활용함

else는 if문이 flase일 때 실행됨

```jsx
const age = 19;

if(age > 19){
    console.log("환영합니다.");
}   else if(age == 19) {
    console.log("수능 잘 보세요");
}   else { 
    console.log("안녕히 가세요.");

    }
```

```jsx
const result = true;

if(result === 1){
    console.log("합격");
} else if(result === true){
    console.log("gg");
}   else {
    console.log("불합격");
}
```