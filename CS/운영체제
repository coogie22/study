명품 운영체제 OPERATING SYSTEM (수정판) - 황기태 지음

; 터미널에서 현재 날짜와 시간 기록하기
; echo %date% %time%

// 2024-09-27 17:50:36.80

1.운영체제 개념

1.1 운영체제 정의 
운영체제(OPERATING SYSTEM)란?
운영체제에 대한 정의는 다양하다

"사용자와 컴퓨터 하드웨어 사이에서 중계 역할을 하면서, 프로그램의 실행을 관리하고 제어하는 시스템  소프트웨어"

운영체제는 모든 컴퓨터 "자원(resource)"을 관리한다
여기서 "자원"이란
* 하드웨어 자원 - CPU , 캐시(cache) , 메모리(RAM) , 키보드 , 마우스 , 디스플레이 , 하드디스크 등
* 소프트웨어 자원 - 응용프로그램들
* 데이터 자원 - 파일 , 데이터베이스 등
운영체제는 컴퓨터 자원이 모든 사용자와 모든 응용프로그램에 의해 잘 공유되도록 관리하는 소프트웨어이다.

운영체제는 자원을 "독점(exclusive)"한다.
이번에는 "독점"이란 단어에 주목한다
* 자원에 대한 접근과 관리 권한이 오직 운영체제에게만 있다는 것이다
PC를 사용하면서 파일을 만든다면 그것은 오로지 운영체제의 의해 실행된다
파일을 만들고 읽고 쓰는 응용프로그램들도 직접 하드 디스크에 접근할 수 없다 
응용프로그램은 운영체제에게 요청하며 운영체제만이 파일을 만들고 읽고 쓴다

왜 운영체제가 독점하는 것일까 ?
* 자원에 대한 접근 권한을 운영체제만이 가지게 함으로써, 사용자들과 응용프로그램들로부터 자원에 대한
* 훼손을 막고 그들 사이에 자원을 효과적으로 공유할 수 있도록 하기 위함이다.

운영체제는 "관리자(supervisor)"이다.
* "관리"는 크게 네 부분으로 구분할 수 있다

첫째 , 사용자에 대한 관리로서 , 사용자의 로그인 계정 , 비밀번호 , 우선순위 , 통계 정보 등 관리이다
둘째 , 프로그램의 실행에서 종료까지 프로그램의 실행에 관한 일체의 자원 관리이다. 프로그램 적재 , 메모리 할당 및 메모리 보호 , 스케줄링 , 저장 공간 관리 등이다.
셋째 , 성능 관리이다. 운영체제는 자원의 활용률을 높여 가능하면 많은 프로그램이 동시에 실행될 수 있도록 처리율을 높이고,  실행에 빠른 응답을 제공하는 등 성능을 극대화하는데 관리의 목표를 둔다.
넷째 , 외부의 침입으로부터 사용자와 컴퓨터 자원을 안전하게 보호하는 보안 관리이다.

운영체제는 "소프트웨어(software)"이다.
구체적으로 운영체제는 "커널(kernel)"이라고 불리는 핵심 코드, 사용자의 컴퓨터 사용을 돕는 "UI(User Interface)"를 비롯한 "도구 프로그램들(tool/utility)"이나
장치를 직접 제어하는 디바이스 드라이버"(device driver)"라는 소프트웨어로 구성된다.
* 커널은 핵(core)라는 뜻으로, 좁은 의미에서 운영체제로 불리는데 앞서 설명한 "관리" 기능을 수행하는 핵심 코드이다. 커널은 운영체제가 설치된 하드 디스크 등
저장 장치에 저장되어 있다가 컴퓨터가 부팅될 때 메모리에 적재된다. 그 후 커널 코드는 응용프로그램이 자원을 접근하기 위해 호출할 때 실행되어
CPU , 메모리 , 키보드 , 디스플레이 , 디스크 장치 등 하드웨어를 제어함
운영체제 패키지에 동봉되어 사용자가 컴퓨터를 쉽게 사용할 수 있도록 돕는 도구 프로그램에는 쉘 , 탐색기 , 작업관리자 , 제어판 등이 있다.


1.2 운영체제의 목적과 기능
운영체제가 존재하는 이유와 본질적인 목적은 무엇일까?
* 사용자의 컴퓨터 사용 편리성
* 자원의 효율적 사용과 관리

* 운영체제는 사용자가 편리하게 사용할 수 있도록 하는 것에 더불어, 컴퓨터 자원의 낭비를 줄이고, CPU를 비롯하여
* 놀고 있는 자원이 없도록 효율적으로 관리하는 것이 목적이자 목표이다.

운영체제 기능

* CPU/프로세스 관리(process management)
운영체제는 저장 장치에 저장된 프로그램을 메모리에 적재하고 이를 "프로세스"라고 한다.
프로세스 실행 , 새로운 프로세스 생성 , 프로세스가 입출력을 요청하거나 CPU 할당 시간을 다 소모하였을 때
프로세스를 중단시키고 대기 중인 프로세스 숭 하나를 선택하는 "스케줄링" , 프로세스 종료 등 프로세스를 관리하는 기능을 수행한다.

* 메모리 관리(memory management)
각 프로세스에 적절한 메모리를 할당하고 변환하며, 프로세스에게 할당된 메모리를 다른 프로세스로부터 보호한다
또한 메모리가 부족할 때 하드 디스크와 같은 저장 장치에 메모리 일부 부분의 내용을 저장해두고 필요할 때 다시 "적재(가상 메모리 기법)"하는 기능을 수행한다

* 파일 시스템 관리(file system management)
각 파일이 저장된 위치 정보 등 파일마다 파일 정보를 관리하며, 전체 파일 시스템의 크기 , 저장 장치의 빈 곳과 사용중인 곳 등 파일 시스템 정보를 관리하며
파일과 디렉토리를 생성하고 관리한다 파일이 기록된 위치를 아는 것은 오직 운영체제 이므로, 운영체제는 파일 읽기 , 파일 쓰기 , 파일 삭제 등 파일을 다루는 모든 기능을 수행한다.

* 장치 관리(device management)
키보드 , 마우스 , 디스플레이 , 프린터 등 다양한 입출력 장치들과 저장 장치를 제어하고 물리적인 입출력을 실행한다.

* 네트워크 관리
네트워크 장치를 관리하고 네트워크 입출력을 실행한다.

* 보안 관리
외부의 공격으로부터 컴퓨터 시스템과 사용자 정보를 보호한다.


1.3 운영체제와 응용소프트웨어
운영체제와 응용소프트웨어의 차이점

* 목적의 차이
운영체제는 컴퓨터 하드웨어나 프로그램 , 파일 등 자원을 관리하여 응용소프트웨어가 실행되는 동안 자원에 대한 서비스를 제공하는 소프트웨어이다
응용소프트웨어는 컴퓨터 사용자들을 위해 특정 작업을 수행하는 소프트웨어로 웹 브라우저 , 한글과 같은 문서 편집기 음악이나 동영상 감상을 위한 플레이어 등이 여기에 속한다
응용소프트웨어는 사용자 편리와 필요를 위해 존재하고 , 운영체제는 컴퓨터의 자원을 잘 관리하여 응용소프트웨어에게 자원 액세스 등 핵심 서비스를 제공하고 효율적으로 사용되도록 하는데 있다.

* 기능의 차이
운영체제는 메모리 관리 , 프로세스 관리 , 작업(프로세스나 스레드) , 스케줄링 , 하드웨어 장치 제어 , 파일 입출력 관리 등의 기능을 수행하며 , 응용소프트웨어는 사용자를 위해 개발된 특정 목적만 수행한다

* 개발 언어의 차이
운영체제의 개발에는 운영체제 코드의 빠른 실행을 위해 C/C++ , 어셈블리어를 이용하며 , 응용소프트웨어는 C/C++뿐 아니라, Java , Python , C#등 다양한 언어를 사용한다.

* 실행의 차이
운영체제는 하드 디스크와 같은 저장 장치의 특정 위치에 저장되어 있다가 컴퓨터를 켜면 메모리에 적재되어 컴퓨터를 끌 때까지 메모리에 상주하면서 
컴퓨터 자원을 관리하고 사용자와 응용소프트웨어의 요청을 처리한다 반면, 응용소프트웨어는 사용자의 명령이나 다른 응용소프트웨어의 명령이 있을 때 실행되고 작업이 끝나거나 사용자가 강제로 종료할 때 종료된다.

* 자원에 대한 접근의 차이
운영체제는 컴퓨터의 모든 자원에 대해 배타적 접근 권한을 가짐 그러므로 응용소프트웨어가 컴퓨터 자원을 사용하고자 할 때는 반드시 운영체제에게 요청해야하며, 운영체제는
응용소프트웨어로부터 요청을 받아 대신 자원에 접근한다. 
응용소프트웨어가 운영체제에게 요청하는 과정을 "시스템 호출(system call)"이라고 한다


2.운영체제의 태동
